package Graph;

import java.util.*;

public class MinimizeMalwareSpread2 {

    public int minMalwareSpread(int[][] graph, int[] initial) {
        int V = graph.length;
        Set<Integer> set = new HashSet<>();
        for (int i : initial)
            set.add(i);

        // group nodes which are not affected
        DisjointSet ds = new DisjointSet(V);
        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (graph[i][j] == 1 && i != j && !set.contains(i) && !set.contains(j))
                {
                    int parent1 = ds.findParent(i);
                    int parent2 = ds.findParent(j);
                    if (parent1 != parent2)
                        ds.unionBySize(parent1, parent2);
                }
            }
        }

        // store affected nodes
        int[] affected = new int[V];
        HashMap<Integer, HashSet<Integer>> map = new HashMap<>();
        for (int i : initial) {
            map.put(i, new HashSet<>());
            for (int j = 0; j < V; j++) {
                if (graph[i][j] == 1 && !set.contains(j) && i != j) {
                    int parent = ds.findParent(j);
                    if (!map.get(i).contains(parent)) {
                        map.get(i).add(parent);
                        affected[parent]++;
                    }
                }
            }
        }


        // find the answer
        int ans = -1, maxSize = -1;
        for (int i : initial) {
            HashSet<Integer> parent = map.get(i);
            int total = 0;

            for (int it : parent) {
                if (affected[it] == 1)
                    total += ds.size.get(it);
            }

            if (total >= maxSize) {
                if (total == maxSize)
                    ans = Math.min(i, ans);
                else
                    ans = i;

                maxSize = total;
            }
        }
        if (ans == -1) {
            Arrays.sort(initial);
            return initial[0];
        }
        return ans;
    }

    public static void main(String[] args) {

    }
}
